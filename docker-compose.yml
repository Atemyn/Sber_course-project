version: '3.8'
services:
  ui:
    container_name: ui
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - '3006:3005'
    depends_on:
      - api
  api:
    container_name: backend_api
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SERVER_PORT= 8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db/documents_db
    depends_on:
      - db
  db:
    container_name: db
    image: postgres:16-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=documents_db
    volumes:
      - /var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka-1:
    container_name: kafka-broker-1
    image: confluentinc/cp-kafka:latest
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  pgadmin-data: